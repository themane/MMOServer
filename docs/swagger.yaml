definitions:
  controllers.PongResponse:
    properties:
      message:
        example: pong
        type: string
    type: object
  models.Clan:
    properties:
      name:
        example: Mind Krackers
        type: string
      role:
        example: MEMBER
        type: string
    type: object
  models.EmployedPopulation:
    properties:
      idle:
        example: 4
        type: integer
      total:
        example: 21
        type: integer
    type: object
  models.Experience:
    properties:
      current:
        example: 185
        type: integer
      level:
        example: 4
        type: integer
      required:
        example: 368
        type: integer
    type: object
  models.LoginResponse:
    properties:
      home_sector:
        $ref: '#/definitions/models.Sector'
      occupied_planets:
        items:
          $ref: '#/definitions/models.StaticPlanetData'
        type: array
      profile:
        $ref: '#/definitions/models.Profile'
    type: object
  models.Mine:
    properties:
      _id:
        example: W101
        type: string
      max_limit:
        example: 550
        type: integer
      mined:
        example: 125
        type: integer
      mining_plant:
        $ref: '#/definitions/models.MiningPlant'
      type:
        example: WATER
        type: string
    type: object
  models.MiningPlant:
    properties:
      building_id:
        example: WMP101
        type: string
      building_level:
        example: 3
        type: integer
      next_level:
        $ref: '#/definitions/models.NextLevelAttributes'
      workers:
        example: 12
        type: integer
    type: object
  models.NextLevelAttributes:
    properties:
      current_mining_rate_per_worker:
        example: 1
        type: integer
      current_workers_max_limit:
        example: 40
        type: integer
      graphene_required:
        example: 101
        type: integer
      max_mining_rate_per_worker:
        example: 12
        type: integer
      max_workers_max_limit:
        example: 130
        type: integer
      next_mining_rate_per_worker:
        example: 1
        type: integer
      next_workers_max_limit:
        example: 65
        type: integer
      shelio_required:
        example: 0
        type: integer
      water_required:
        example: 5
        type: integer
    type: object
  models.OccupiedPlanet:
    properties:
      home:
        example: true
        type: boolean
      mines:
        items:
          $ref: '#/definitions/models.Mine'
        type: array
      planet_config:
        example: Planet2.json
        type: string
      population:
        $ref: '#/definitions/models.Population'
      position:
        $ref: '#/definitions/models.PlanetPosition'
      resources:
        $ref: '#/definitions/models.Resources'
    type: object
  models.PlanetPosition:
    properties:
      _id:
        example: 023:049:07
        type: string
      planet:
        example: 7
        type: integer
      sector:
        example: 49
        type: integer
      system:
        example: 23
        type: integer
    type: object
  models.Population:
    properties:
      generation_rate:
        example: 3
        type: integer
      soldiers:
        $ref: '#/definitions/models.EmployedPopulation'
      total:
        example: 45
        type: integer
      unemployed:
        example: 3
        type: integer
      workers:
        $ref: '#/definitions/models.EmployedPopulation'
    type: object
  models.Profile:
    properties:
      clan:
        $ref: '#/definitions/models.Clan'
      experience:
        $ref: '#/definitions/models.Experience'
      username:
        example: devashish
        type: string
    type: object
  models.Resource:
    properties:
      amount:
        example: 23
        type: integer
      max_limit:
        example: 100
        type: number
      reserved:
        example: 14
        type: integer
    type: object
  models.Resources:
    properties:
      graphene:
        $ref: '#/definitions/models.Resource'
      shelio:
        example: 23
        type: integer
      water:
        $ref: '#/definitions/models.Resource'
    type: object
  models.Sector:
    properties:
      occupied_planets:
        items:
          $ref: '#/definitions/models.OccupiedPlanet'
        type: array
      position:
        $ref: '#/definitions/models.SectorPosition'
      unoccupied_planets:
        items:
          $ref: '#/definitions/models.UnoccupiedPlanet'
        type: array
    type: object
  models.SectorPosition:
    properties:
      _id:
        example: 023:049
        type: string
      sector:
        example: 49
        type: integer
      system:
        example: 23
        type: integer
    type: object
  models.StaticPlanetData:
    properties:
      planet_config:
        example: Planet2.json
        type: string
      position:
        $ref: '#/definitions/models.PlanetPosition'
      same_sector:
        example: true
        type: boolean
    type: object
  models.UnoccupiedPlanet:
    properties:
      planet_config:
        example: Planet2.json
        type: string
      position:
        $ref: '#/definitions/models.PlanetPosition'
    type: object
host: mmo-server-4xcaklgmnq-el.a.run.app
info:
  contact:
    email: devagpta@gmail.com
    name: Devashish Gupta
  description: This is the server for new MMO Game based in space.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: MMO Game Server
  version: 1.0.0
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login verification and first load of complete user data
      parameters:
      - description: user identifier
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
      summary: Login API
      tags:
      - data retrieval
  /ping:
    get:
      consumes:
      - '*/*'
      description: Pings the server for checking the health of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PongResponse'
      summary: Pings the server
      tags:
      - root
  /refresh/population:
    post:
      consumes:
      - application/json
      description: Refresh endpoint to quickly refresh population data with the latest
        values
      parameters:
      - description: user identifier
        in: query
        name: username
        required: true
        type: string
      - description: planet identifier
        in: query
        name: planet_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Population'
      summary: Refresh population API
      tags:
      - data retrieval
  /refresh/resources:
    post:
      consumes:
      - application/json
      description: Refresh endpoint to quickly refresh mine data with the latest values
      parameters:
      - description: user identifier
        in: query
        name: username
        required: true
        type: string
      - description: planet identifier
        in: query
        name: planet_id
        required: true
        type: string
      - description: mine identifier
        in: query
        name: mine_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Resources'
      summary: Refresh mine API
      tags:
      - data retrieval
schemes:
- https
swagger: "2.0"
